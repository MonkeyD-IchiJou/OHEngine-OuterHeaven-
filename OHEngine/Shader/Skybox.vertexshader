#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexColor;
layout(location = 2) in vec3 vertexNormal_modelspace;
layout(location = 3) in vec2 vertexTexCoord;

// Output data ; will be interpolated for each fragment.
out vec3 textureCoords;

//Uniform parameters from application
uniform mat4 VP;

void main(){

	gl_Position = VP * vec4(vertexPosition_modelspace,1);

	// The color of each vertex will be interpolated to produce the color of each fragment
	// Color pass through vertex shader, as it does not process color
	textureCoords = vertexPosition_modelspace;
}

